@page "/Jobs"
@using Tasker.Dashboard.Model.Job
@inject HttpClient HttpClient

<Modal Title="@("Create new Job")"
       Visible="@_createJobModalVisible"
       OnOk="@HandleOkCreateJob"
       OnCancel="@HandleCancelCreateJob"
       ConfirmLoading="@_createJobModalLoadingBtn">

    <Form Model="@_createJobRequest"
          LabelColSpan="8"
          WrapperColSpan="16"
          OnFinish="OnFinishCreateJob"
          OnFinishFailed="OnFinishCreateJobFailed"
          @ref="@_createJobForm">

        <FormItem Label="Job Name">
            <Input @bind-Value="@context.Name" OnBlur="@CheckJobNameUnique"/>
            @if (!_isJobNameUnique)
            {
                <Alert Message="Job name is already in use. Please choose a unique name." Type="error"/>
            }
        </FormItem>

        <FormItem Label="Cron Expression">
            <Input @bind-Value="@context.CronExpression"/>
        </FormItem>


        <FormItem Label="Maximum Retries">
            <Input @bind-Value="@context.MaximumRetries"/>
        </FormItem>


        <FormItem Label="Interval in Minutes">
            <Input @bind-Value="@context.IntervalInMinutes"/>
        </FormItem>
    </Form>
</Modal>


<PageContainer Title="Jobs">
    <Button Type="@ButtonType.Primary" Icon="@IconType.Outline.Plus" OnClick="@ShowCreateJobModal" Style="margin-bottom: 20px">Create new Job</Button>

    <Card>
        <Table TItem="JobData" DataSource="@_jobData">
            <PropertyColumn Property="j => j.Id" Sortable="true" Filterable="true">
                <a>@context.Id</a>
            </PropertyColumn>
            <PropertyColumn Property="j => j.Name" Sortable="true" Filterable="true">
                <a>@context.Name</a>
            </PropertyColumn>
            <PropertyColumn Property="j => j.StatusId" Sortable="true" Filterable="true">
                @switch (context.StatusId)
                {
                    case 1:
                        <Tag Color="blue">In Progress</Tag>
                        break;
                    case 2:
                        <Tag Color="green">Completed</Tag>
                        break;
                    case 3:
                        <Tag Color="blue">Sent to MQ</Tag>
                        break;
                    case 4:
                        <Tag Color="red">Failed</Tag>
                        break;
                    case 5:
                        <Tag Color="red">Cancelled</Tag>
                        break;
                    case 6:
                        <Tag Color="red">Failed MQ</Tag>
                        break;
                    default:
                        <Tag>Unknown</Tag>
                        break;
                }
            </PropertyColumn>
            <PropertyColumn Property="j => j.CreationDate" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.LastUpdate" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.LastExecution" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.MaximumRetries" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.CurrentlyRetries" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.ExecutedBy" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.CronExpression" Sortable="true" Filterable="true"></PropertyColumn>
            <PropertyColumn Property="j => j.IntervalInMinutes" Sortable="true" Filterable="true"></PropertyColumn>
            <ActionColumn Title="Action">
                <Space Size=@("middle")>
                    <SpaceItem>
                        <a>Details</a>
                    </SpaceItem>
                    <SpaceItem>
                        <a>Delete</a>
                    </SpaceItem>
                </Space>
            </ActionColumn>
        </Table>
    </Card>
</PageContainer>